@startuml
skinparam componentStyle rectangle
skinparam packageStyle rectangle
hide empty members

' Top-level system
package "Минималистичная блокчейн-система" {

  ' --------------------------
  ' СЕТЕВОЙ УРОВЕНЬ (Network Layer)
  ' --------------------------
  package "Сетевой уровень" as NetworkLayer {
    [P2P-сеть] as P2PNetwork
    [Протокол взаимодействия узлов\n(Gossip, RPC)] as NodeComm
    [Менеджер пиров\n(Peer Manager)] as PeerManager
  }

  ' --------------------------
  ' УРОВЕНЬ КОНСЕНСУСА (Consensus Layer)
  ' --------------------------
  package "Уровень консенсуса" as ConsensusLayer {
    [Менеджер PoS/DPoS\n(Validator Selector)] as PoSValidator
    [Алгоритм BFT\n(PBFT/Tendermint)] as BFTEngine
    [Компонент выбора алгоритма\n(Consensus Switcher)] as ConsensusSwitcher
  }

  ' --------------------------
  ' УРОВЕНЬ ХРАНЕНИЯ И СТРУКТУР ДАННЫХ (Data & Storage Layer)
  ' --------------------------
  package "Уровень хранения и структур данных" as StorageLayer {
    [Блокчейн\n(Линейная цепочка)] as BlockchainDB
    [Очередь транзакций\n(Transaction Pool)] as TxPool
  }

  ' --------------------------
  ' КРИПТОГРАФИЧЕСКИЙ МОДУЛЬ (Crypto Layer)
  ' --------------------------
  package "Криптографический модуль" as CryptoLayer {
    [Цифровые подписи\n(ECDSA)] as SignatureModule
  }

  ' --------------------------
  ' МОДУЛЬ БЕЗОПАСНОСТИ (Security Layer)
  ' --------------------------
  package "Модуль безопасности" as SecurityLayer {
    [Защита от\n«двойных расходов»] as DoubleSpendGuard
    [Защита от атак Sybil\n(Sybil Protection)] as SybilGuard
    [Защита от атак 51%\n(51% Defense)] as FiftyOnePercentGuard
    [Аудит журналов\n(Security Audits)] as AuditLogs
  }

  ' --------------------------
  ' МОДУЛЬ УПРАВЛЕНИЯ И ГОВЕРНАНС (Governance Layer)
  ' --------------------------
  package "Модуль управления и говернанс" as GovernanceLayer {
    [Менеджер обновлений\n(Upgrade Manager)] as UpgradeManager
  }

  ' --------------------------
  ' УРОВЕНЬ ИНТЕГРАЦИИ (Integration Layer)
  ' --------------------------
  package "Уровень интеграции" as IntegrationLayer {
    [REST API / JSON-RPC] as APIEndpoint
  }

  ' --------------------------
  ' СВЯЗИ МЕЖДУ КОМПОНЕНТАМИ
  ' --------------------------

  ' Сетевой уровень взаимодействует со всеми остальными
  P2PNetwork        --> ConsensusSwitcher      : "Рассылка блоков и транзакций"
  P2PNetwork        --> BlockchainDB          : "Синхронизация данных"
  P2PNetwork        --> APIEndpoint           : "Прием входящих запросов"
  PeerManager       --> P2PNetwork            : "Управление списком пиров"
  NodeComm          --> PeerManager           : "RPC-вызовы между узлами"

  ' Consensus Layer взаимодействует с Crypto и Storage
  ConsensusSwitcher --> PoSValidator          : "Выбор валидаторов (PoS/DPoS)"
  ConsensusSwitcher --> BFTEngine             : "Использование BFT протоколов"
  PoSValidator      --> SignatureModule       : "Валидация цифровых подписей"
  BFTEngine         --> NodeComm              : "Обмен сообщениями для BFT"
  BFTEngine         --> SignatureModule       : "Проверка подписей блоков"
  PoSValidator      --> BlockchainDB          : "Добавление блоков"
  BFTEngine         --> BlockchainDB          : "Добавление блоков"

  ' Data & Storage Layer взаимодействует с Crypto и TxPool
  TxPool            --> SignatureModule       : "Проверка подлинности транзакций"
  BlockchainDB      --> SignatureModule       : "Проверка подписей блоков"

  ' Crypto Layer взаимодействует с Security
  SignatureModule   --> AuditLogs             : "Логирование подписей"

  ' Security Layer взаимодействует с TxPool и Consensus
  DoubleSpendGuard  --> TxPool                : "Проверка на двойную трату"
  SybilGuard        --> PeerManager           : "Ограничения по регистрации узлов"
  FiftyOnePercentGuard --> ConsensusSwitcher  : "Мониторинг доли голосов"
  AuditLogs         --> UpgradeManager        : "Логирование изменений протокола"

  ' Governance Layer взаимодействует с Consensus
  UpgradeManager    --> ConsensusSwitcher     : "Изменение типа консенсуса"

  ' Integration Layer связывает внешние системы
  APIEndpoint       --> TxPool                : "Прием транзакций от клиентов"
  APIEndpoint       --> BlockchainDB          : "Получение данных блокчейна"

}
@enduml